##CI CD build in single pipeline

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '17' ]

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven
      - name: execute permission to Maven
        run: chmod +x mvnw

      - name: Build with Maven Wrapper 
        run: ./mvnw -B package
  
  Deploy:      
      - name: Install kubectl
        uses: azure/setup-kubectl@v2.0
        with:
          version: 'v1.24.0' # default is latest stable
        id: install
  
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
  
      - name: Login to Amazon ECR
        # id: login-ecr
        # uses: aws-actions/amazon-ecr-login@v1
        run: aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
      
      - name: execute permission to Maven
        run: chmod +x mvnw
  
      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: petclinic
          IMAGE_TAG: 1.1
        run: |
          # # docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG . -f Dockerfile
          docker build -t my-image .
          docker tag my-image ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/petclinic:latest
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/petclinic:latest
          
  
      - name: Pull image
        run: docker pull ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/petclinic:latest
      
      - name: Authenticate kubectl with EKS
        run: aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name petclinic
  
      - name: Deploy to EKS
        run: |
          kubectl apply -f deployment.yml
          kubectl apply -f service.yml

        

    